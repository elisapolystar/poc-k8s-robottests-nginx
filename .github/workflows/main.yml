name: "tagged-release"

on:
  push:
    tags:
      - "v*"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  REPORT_TAG_PREFIX: web
  DOWNLOADER_TAG_PREFIX: dl

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@master
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          file: Dockerfile
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache,mode=max

      - name: Extract metadata (tags, labels) for Docker
        id: meta-reports
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern=${{env.REPORT_TAG_PREFIX}}-{{version}}
            type=semver,pattern=${{env.REPORT_TAG_PREFIX}}-{{major}}.{{minor}}

      - name: Build and push Docker robort-report
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          file: Reportpage.Dockerfile
          platforms: linux/amd64
          tags: ${{ steps.meta-reports.outputs.tags }}
          labels: ${{ steps.meta-reports.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{env.REPORT_TAG_PREFIX}}-buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{env.REPORT_TAG_PREFIX}}-buildcache,mode=max
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta-downloader
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern=${{env.DOWNLOADER_TAG_PREFIX}}-{{version}}
            type=semver,pattern=${{env.DOWNLOADER_TAG_PREFIX}}-{{major}}.{{minor}}

      - name: Build and push Docker robort-report
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          file: Downloader.Dockerfile
          platforms: linux/amd64
          tags: ${{ steps.meta-downloader.outputs.tags }}
          labels: ${{ steps.meta-downloader.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{env.DOWNLOADER_TAG_PREFIX}}-buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{env.DOWNLOADER_TAG_PREFIX}}-buildcache,mode=max